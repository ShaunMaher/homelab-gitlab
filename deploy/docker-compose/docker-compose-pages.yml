services:
  omnibus:
    image: 'gitlab/gitlab-ce:latest'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    container_name: 'omnibus'
    hostname: 'omnibus'
    environment:
      TZ: Australia/Melbourne

      GITLAB_OMNIBUS_CONFIG: |
        pages_external_url "http://ghanima.net"
        roles ['pages_role']
        gitlab_pages['gitlab_server'] = 'https://git.ghanima.net'

        gitlab_pages['external_http'] = [ '0.0.0.0:8063' ]
        pages_nginx['enable'] = false
        pages_nginx['listen_port'] = 81
        pages_nginx['listen_https'] = false
        pages_nginx['redirect_http_to_https'] = false
        prometheus['home'] = "/tmp/prometheus"
        
        # Consolidated object storage configuration
        gitlab_rails['object_store']['enabled'] = true
        gitlab_rails['object_store']['proxy_download'] = true
        gitlab_rails['object_store']['connection'] = {
          'provider' => 'AWS',
          'region' => '$S3_REGION',
          'aws_access_key_id' => '$S3_ACCESS_KEY',
          'aws_secret_access_key' => '$S3_SECRET_KEY',
          'endpoint' => '$S3_ENDPOINT',
          'path_style' => true
        }
        gitlab_rails['object_store']['objects']['artifacts']['enabled'] = false
        gitlab_rails['object_store']['objects']['external_diffs']['enabled'] = false
        gitlab_rails['object_store']['objects']['lfs']['enabled'] = false
        gitlab_rails['object_store']['objects']['uploads']['enabled'] = false
        gitlab_rails['object_store']['objects']['packages']['enabled'] = false
        gitlab_rails['object_store']['objects']['dependency_proxy']['enabled'] = false
        gitlab_rails['object_store']['objects']['terraform_state']['enabled'] = false
        gitlab_rails['object_store']['objects']['ci_secure_files']['enabled'] = false
        gitlab_rails['object_store']['objects']['pages']['bucket'] = '$S3_PAGES_BUCKET'
    volumes:
      - 'gitlab_config:/etc/gitlab'
      - 'gitlab_logs:/var/log/gitlab'
      - 'gitlab_data:/var/opt/gitlab'
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777
    healthcheck:
      test: [ "CMD", "/opt/gitlab/embedded/bin/curl", "--header", "Host: www.ghanima.net", "--fail", "http://127.0.0.1:8063" ]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 120s
      start_interval: 5s
    shm_size: '256m'
  cloudflared_configure:
    restart: always
    image: bash:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: Australia/Melbourne
      CF_PAGES_TUNNEL_UUID: $CF_PAGES_TUNNEL_UUID
      CF_PAGES_CREDENTIALS: $CF_PAGES_CREDENTIALS
      GL_HOSTNAMES: "git.ghanima.net"
      GL_PAGES_DOMAIN: "ghanima.net"
      GL_PAGES_DOMAIN_ROOT_SITE: "www.ghanima.net"
    entrypoint: 
      - "/usr/local/bin/bash"
      - "-ec"
      - |
        PAGESCONFMD5=""
        while true; do
          echo -e "tunnel: $${CF_PAGES_TUNNEL_UUID}\ncredentials-file: /etc/cloudflared/tunnel-credentials.json\ningress:\n" > /etc/cloudflared_pages/config.yaml
          echo -e "  - hostname: $${GL_PAGES_DOMAIN}\n    service: http://$$(getent hosts omnibus | awk '{print $$1}'):8063\n    httpHostHeader: \"$${GL_PAGES_DOMAIN_ROOT_SITE}\"\n    originRequest:\n      httpHostHeader: \"$${GL_PAGES_DOMAIN_ROOT_SITE}\"" >> /etc/cloudflared_pages/config.yaml
          echo -e "  - hostname: \"*.$${GL_PAGES_DOMAIN}\"\n    service: http://$$(getent hosts omnibus | awk '{print $$1}'):8063\n" >> /etc/cloudflared_pages/config.yaml
          echo -e "  - service: http_status:404\n" >> /etc/cloudflared_pages/config.yaml
          if [ "$${CF_PAGES_CREDENTIALS}" != "" ]; then
            echo "$${CF_PAGES_CREDENTIALS}" > /etc/cloudflared_pages/tunnel-credentials.json
          fi
          ls -la /etc/cloudflared_pages/
          cat /etc/cloudflared_pages/*
          NEWPAGESCONFMD5=$(cat /etc/cloudflared/* | md5sum | awk '{print $$1}')
          echo "PAGESCONFMD5 $${PAGESCONFMD5}, NEWPAGESCONFMD5 $${NEWPAGESCONFMD5}"
          if [ "$${NEWPAGESCONFMD5}" != "$${PAGESCONFMD5}" ]; then
            CFPID=$$(ps a | grep '[[:space:]]cloudflared[[:space:]].*tunnel run.*$$' | awk '{print $$1}')
            echo "Need to reload cloudflared (pid $${CFPID})"
            if [ "$${CFPID}" != "" ]; then
              kill -HUP $${CFPID}
              PAGESCONFMD5="$${NEWPAGESCONFMD5}"
            fi
          fi
          
          sleep 10
        done
    volumes:
      - 'gitlab_cloudflared_pages_config:/etc/cloudflared_pages'
  cloudflared_pages:
    image: 'cloudflare/cloudflared:latest'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: Australia/Melbourne
      TUNNEL_LOGLEVEL: trace
    pid: service:cloudflared_configure
    restart: always
    hostname: 'cloudflared_pages'
    command: '--protocol http2 tunnel run'
    volumes:
      - 'gitlab_cloudflared_pages_config:/etc/cloudflared'
    #depends_on:
    #  omnibus:
    #    condition: service_healthy
volumes:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  gitlab_runner_config:
  gitlab_backupsrunner_config:
  gitlab_cloudflared_pages_config:
