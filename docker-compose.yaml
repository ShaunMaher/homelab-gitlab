version: '3.6'
services:
  omnibus:
    image: 'gitlab/gitlab-ce:15.11.3-ce.0'
    restart: always
    container_name: 'omnibus'
    hostname: 'omnibus'
    environment:
      TZ: Australia/Melbourne
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://git.ghanima.net'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
        registry_external_url 'https://cr.ghanima.net'
        registry['registry_http_addr'] = "localhost:5000"
        registry_nginx['redirect_http_to_https'] = true
        registry_nginx['listen_port'] = 5678
        pages_external_url "http://ghanima.net"
        gitlab_pages['external_http'] = [ '0.0.0.0:8063' ]
        pages_nginx['enable'] = false
        pages_nginx['listen_port'] = 81
        pages_nginx['listen_https'] = false
        pages_nginx['redirect_http_to_https'] = false
        letsencrypt['enable'] = true
        letsencrypt['auto_renew'] = true
        prometheus['home'] = "/tmp/prometheus"
    ports:
      - '80:80'
      - '443:443'
      - '2422:22'
      - '5000:5000'
    volumes:
      - 'gitlab_config:/etc/gitlab'
      - 'gitlab_logs:/var/log/gitlab'
      - 'gitlab_data:/var/opt/gitlab'
      - type: tmpfs
        target: /tmp
    shm_size: '256m'
  runner:
    image: gitlab/gitlab-runner:v15.11.0
    restart: always
    container_name: runner
    hostname: runner
    environment:
      TZ: Australia/Melbourne
    volumes:
      - 'gitlab_runner_config:/etc/gitlab-runner'
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
  cloudflared_configure:
    restart: always
    image: bash:latest
    environment:
      TZ: Australia/Melbourne
      CF_TUNNEL_UUID: e7039121-f26c-4022-b142-ecf50ba7a10c
      #CF_HOSTNAMES: "\"*.ghanima.net\""
      GL_HOSTNAMES: "git.ghanima.net"
      GL_PAGES_DOMAIN: "ghanima.net"
      GL_PAGES_DOMAIN_ROOT_SITE: "www.ghanima.net"
      CF_CREDENTIALS: "{\"AccountTag\":\"783471beb9c45fbe56527404388136f8\",\"TunnelSecret\":\"7KS7ZL7Dz0VQueHtp2S2a4SiuuzDNAms5za6mqux9wU=\",\"TunnelID\":\"e7039121-f26c-4022-b142-ecf50ba7a10c\"}"
    entrypoint: 
      - "/usr/local/bin/bash"
      - "-ec"
      - |
        CONFMD5=""
        while true; do
          echo -e "tunnel: $${CF_TUNNEL_UUID}\ncredentials-file: /etc/cloudflared/tunnel-credentials.json\ningress:\n" > /etc/cloudflared/config.yaml
          readarray -t -d "," DOMAINS < <(echo "$${GL_HOSTNAMES}" | tr -d '\n')
          for DOMAIN in "$${DOMAINS[@]}"; do
            echo -e "  - hostname: $${DOMAIN}\n    service: https://$$(getent hosts omnibus | awk '{print $$1}'):443\n    originRequest:\n      noTLSVerify: true\n" >> /etc/cloudflared/config.yaml
          done
          echo -e "  - hostname: cr.ghanima.net\n    service: https://$$(getent hosts omnibus | awk '{print $$1}'):5678\n    originRequest:\n      noTLSVerify: true\n" >> /etc/cloudflared/config.yaml
          echo -e "  - hostname: $${GL_PAGES_DOMAIN}\n    service: http://$$(getent hosts omnibus | awk '{print $$1}'):8063\n    httpHostHeader: \"$${GL_PAGES_DOMAIN_ROOT_SITE}\"\n    originRequest:\n      httpHostHeader: \"$${GL_PAGES_DOMAIN_ROOT_SITE}\"" >> /etc/cloudflared/config.yaml
          echo -e "  - hostname: \"*.$${GL_PAGES_DOMAIN}\"\n    service: http://$$(getent hosts omnibus | awk '{print $$1}'):8063\n" >> /etc/cloudflared/config.yaml
          echo -e "  - service: http_status:404\n" >> /etc/cloudflared/config.yaml
          if [ "$${CF_CREDENTIALS}" != "" ]; then
            echo "$${CF_CREDENTIALS}" > /etc/cloudflared/tunnel-credentials.json
          fi
          ls -la /etc/cloudflared
          cat /etc/cloudflared/*
          
          NEWCONFMD5=$(cat /etc/cloudflared/* | md5sum | awk '{print $$1}')
          echo "CONFMD5 $${CONFMD5}, NEWCONFMD5 $${NEWCONFMD5}"
          if [ "$${NEWCONFMD5}" != "$${CONFMD5}" ]; then
            CFPID=$$(ps a | grep '[[:space:]]cloudflared[[:space:]].*tunnel run.*$$' | awk '{print $$1}')
            echo "Need to reload cloudflared (pid $${CFPID})"
            if [ "$${CFPID}" != "" ]; then
              kill -HUP $${CFPID}
              CONFMD5="$${NEWCONFMD5}"
            fi
          fi
 
          sleep 10
        done
    volumes:
      - 'gitlab_cloudflared_config:/etc/cloudflared'
  cloudflared:
    image: 'cloudflare/cloudflared:2023.5.0'
    environment:
      TZ: Australia/Melbourne
      TUNNEL_LOGLEVEL: trace
    pid: service:cloudflared_configure
    restart: always
    container_name: 'cloudflared'
    hostname: 'cloudflared'
    command: '--protocol http2 tunnel run'
    volumes:
      - 'gitlab_cloudflared_config:/etc/cloudflared'
    #depends_on:
    #  cloudflared_configure:
    #    condition: service_completed_successfully
volumes:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  gitlab_runner_config:
  gitlab_cloudflared_config:
